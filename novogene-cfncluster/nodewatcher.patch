--- nodewatcher.py.orig	2016-11-10 16:03:41.000000000 +0800
+++ nodewatcher.py	2016-11-10 18:47:42.000000000 +0800
@@ -13,6 +13,7 @@
 
 __author__ = 'dougalb'
 
+import subprocess as sub
 from datetime import datetime
 import boto.ec2
 import dateutil.parser
@@ -24,6 +25,9 @@
 import sys
 import tempfile
 import logging
+import shlex
+import ConfigParser
+
 
 log = logging.getLogger(__name__)
 
@@ -125,6 +129,7 @@
     _as_conn = boto.ec2.autoscale.connect_to_region(region,proxy=boto.config.get('Boto', 'proxy'),
                                           proxy_port=boto.config.get('Boto', 'proxy_port'))
     if not maintainSize(region, asg):
+        scpLogs()
         log.info("terminating %s" % instance_id)
         _as_conn.terminate_instance(instance_id, decrement_capacity=True)
 
@@ -142,6 +147,24 @@
         log.debug('capacity less then or equal to min size.')
         return True
 
+def __runSgeCommand(command):
+    log.debug(repr(command))
+    _command = shlex.split(str(command))
+    log.debug(_command)
+    try:
+        sub.check_call(_command, env=dict(os.environ, SGE_ROOT='/opt/sge'))
+    except sub.CalledProcessError:
+        log.error("Failed to run %s\n" % _command)
+
+def scpLogs():
+    # generate file name based on hostname
+    import socket
+    hostname = socket.gethostname()
+
+    # tar log
+    command = ("/bin/tar czvf /home/ec2-user/%s.tgz /var/log " % hostname)
+    __runSgeCommand(command)
+
 def main():
     logging.basicConfig(
         level=logging.INFO,
